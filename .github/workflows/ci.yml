name: Continuous Integration
on: push

jobs:
    format:
        name: Formatting
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up PHP 8.1
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  tools: cs2pr

            - name: Setup Problem Matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Run php-cs-fixer
              run: composer format | cs2pr

            - name: Check differences
              run: git diff --exit-code

    stan:
        name: PHPStan Analysis
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up PHP 8.1
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  tools: cs2pr

            - name: Setup Problem Matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Run PHPStan
              run: composer stan | cs2pr

    tests:
        name: PHP ${{ matrix.php-versions }} on ${{ matrix.os }} w/ ${{ matrix.dependencies }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['8.1']
                os: [ubuntu-latest]
                dependencies: ['install']

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up PHP ${{ matrix.php-versions }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: json
                  coverage: xdebug

            - name: Setup Problem Matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Setup Problem Matchers for PHPUnit
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer ${{ matrix.dependencies }} --prefer-dist --no-progress --no-suggest --ignore-platform-reqs

            - name: Run test suite
              run: |
                  bin/console doctrine:schema:create --env=test
                  composer test

            - name: Push to Codecov
              if: matrix.php-versions == '8.1' && runner.os == 'Linux' && matrix.dependencies == 'install'
              uses: codecov/codecov-action@v2
              with:
                  files: ./coverage.xml
